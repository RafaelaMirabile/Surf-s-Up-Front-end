{"ast":null,"code":"import axios from \"axios\";\nconst URL_BASE = \"http://localhost:5000\";\nasync function getPoints() {\n  const points = `${URL_BASE}`;\n  return await axios.get(points);\n}\n;\nasync function getForecast(body) {\n  const params = 'waveHeight,airTemperature,currentDirection,windDirection,swellPeriod,windSpeed';\n  return await axios.get(`https://api.stormglass.io/v2/weather/point?lat=${body.latitude}&lng=${body.longitude}&params=${params}`, {\n    headers: {\n      'Authorization': 'f5f848e0-96d0-11ed-a138-0242ac130002-f5f84994-96d0-11ed-a138-0242ac130002'\n    }\n  });\n}\nasync function getReports(pointId) {\n  const reports = `${URL_BASE}/${pointId}`;\n  return await axios.get(reports);\n}\nasync function postSignIn(body) {\n  const signIn = `${URL_BASE}/signIn`;\n  return await axios.post(signIn, body);\n}\n;\nasync function postSignUp(body) {\n  const signUp = `${URL_BASE}/signUp`;\n  return await axios.post(signUp, body);\n}\n;\nexport { getPoints, getForecast, getReports, postSignIn, postSignUp };","map":{"version":3,"names":["axios","URL_BASE","getPoints","points","get","getForecast","body","params","latitude","longitude","headers","getReports","pointId","reports","postSignIn","signIn","post","postSignUp","signUp"],"sources":["/home/rafus/Documents/Surfs-Up-Front-end/src/services/API.js"],"sourcesContent":["import axios from \"axios\";\n\nconst URL_BASE = \"http://localhost:5000\";\n\nasync function getPoints() {\n    const points = `${URL_BASE}`;\n    return await axios.get(points);\n};\n\nasync function getForecast(body) {\n    const params = 'waveHeight,airTemperature,currentDirection,windDirection,swellPeriod,windSpeed'\n    return await axios.get(`https://api.stormglass.io/v2/weather/point?lat=${body.latitude}&lng=${body.longitude}&params=${params}`, {\n        headers: {\n            'Authorization': 'f5f848e0-96d0-11ed-a138-0242ac130002-f5f84994-96d0-11ed-a138-0242ac130002'\n        }\n    });\n}\n\nasync function getReports(pointId) {\n    const reports = `${URL_BASE}/${pointId}`\n    return await axios.get(reports);\n}\n\nasync function postSignIn(body) {\nconst signIn = `${URL_BASE}/signIn`;\nreturn await axios.post(signIn,body);\n};\n\nasync function postSignUp(body) {\n    const signUp = `${URL_BASE}/signUp`;\n    return await axios.post(signUp, body);\n};\n\nexport { getPoints, getForecast, getReports, postSignIn, postSignUp }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,eAAeC,SAAS,GAAG;EACvB,MAAMC,MAAM,GAAI,GAAEF,QAAS,EAAC;EAC5B,OAAO,MAAMD,KAAK,CAACI,GAAG,CAACD,MAAM,CAAC;AAClC;AAAC;AAED,eAAeE,WAAW,CAACC,IAAI,EAAE;EAC7B,MAAMC,MAAM,GAAG,gFAAgF;EAC/F,OAAO,MAAMP,KAAK,CAACI,GAAG,CAAE,kDAAiDE,IAAI,CAACE,QAAS,QAAOF,IAAI,CAACG,SAAU,WAAUF,MAAO,EAAC,EAAE;IAC7HG,OAAO,EAAE;MACL,eAAe,EAAE;IACrB;EACJ,CAAC,CAAC;AACN;AAEA,eAAeC,UAAU,CAACC,OAAO,EAAE;EAC/B,MAAMC,OAAO,GAAI,GAAEZ,QAAS,IAAGW,OAAQ,EAAC;EACxC,OAAO,MAAMZ,KAAK,CAACI,GAAG,CAACS,OAAO,CAAC;AACnC;AAEA,eAAeC,UAAU,CAACR,IAAI,EAAE;EAChC,MAAMS,MAAM,GAAI,GAAEd,QAAS,SAAQ;EACnC,OAAO,MAAMD,KAAK,CAACgB,IAAI,CAACD,MAAM,EAACT,IAAI,CAAC;AACpC;AAAC;AAED,eAAeW,UAAU,CAACX,IAAI,EAAE;EAC5B,MAAMY,MAAM,GAAI,GAAEjB,QAAS,SAAQ;EACnC,OAAO,MAAMD,KAAK,CAACgB,IAAI,CAACE,MAAM,EAAEZ,IAAI,CAAC;AACzC;AAAC;AAED,SAASJ,SAAS,EAAEG,WAAW,EAAEM,UAAU,EAAEG,UAAU,EAAEG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}