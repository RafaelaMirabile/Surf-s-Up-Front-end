{"ast":null,"code":"var _jsxFileName = \"/home/rafus/Documents/Surfs-Up-Front-end/src/pagesComponents/homePageComponents/Forecast.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ForcastContext from \"../../contexts/forcastContext.js\";\nimport { getForecast } from \"../../services/API.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(_ref) {\n  _s();\n  let {\n    latitude,\n    longitude,\n    pointList\n  } = _ref;\n  const [forecast, setForecast] = useState([]);\n  let forecastByHour;\n  let forcastHash = {};\n  console.log(pointList);\n  for (let i = 0; i < pointList.length; i++) {\n    console.log(pointList[i].name);\n    if (pointList[i].name !== forcastHash[pointList[i].name]) {\n      useEffect(() => {\n        const body = {\n          longitude: longitude,\n          latitude: latitude\n        };\n        getForecast(body).then(response => {\n          setForecast(response.data.hours);\n        }).catch(error => {\n          console.log(error);\n        });\n      }, []);\n      forecastByHour = forecast.filter((forecast, index) => index === 6 || index === 9 || index === 15 || index === 18);\n      forcastHash[pointList[i].name] = forecastByHour;\n    } else {\n      forecastByHour = forcastHash[pointList[i].name];\n    }\n  }\n  console.log(forecastByHour);\n\n  /* const forecastByHour = forecast.filter((forecast, index) => index === 6 || index === 9 || index === 15 || index === 18);\n   console.log(forecastByHour);\n   const arrWithForcast = {selectedPointName : [forecastByHour]}\n   console.log(arrWithForcast);*/\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: \"ALA\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Forecast, \"Ydn6hUZqbmyQnL7JGFANHgW/va4=\");\n_c = Forecast;\nconst Wrapper = styled.div`\nborder: 2px solid orange;\n`;\n_c2 = Wrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"Forecast\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"names":["useContext","useEffect","useState","styled","ForcastContext","getForecast","Forecast","latitude","longitude","pointList","forecast","setForecast","forecastByHour","forcastHash","console","log","i","length","name","body","then","response","data","hours","catch","error","filter","index","Wrapper","div"],"sources":["/home/rafus/Documents/Surfs-Up-Front-end/src/pagesComponents/homePageComponents/Forecast.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\"\nimport styled from \"styled-components\";\nimport ForcastContext from \"../../contexts/forcastContext.js\";\nimport { getForecast } from \"../../services/API.js\";\n\nexport default function Forecast({ latitude, longitude, pointList }) {\n\n    const [forecast, setForecast] = useState([]);\n    let forecastByHour;\n    let forcastHash = {}\n    console.log(pointList);\n\n    for(let i=0; i< pointList.length; i++){\n        console.log(pointList[i].name)\n        if(pointList[i].name !== forcastHash[pointList[i].name]){\n            useEffect(() => {\n                const body = {\n                    longitude: longitude,\n                    latitude: latitude\n                }\n                getForecast(body).then((response) => {\n                    setForecast(response.data.hours);\n                }).catch((error) => {\n                    console.log(error);\n                });\n           }, [])\n            forecastByHour = forecast.filter((forecast, index) => index === 6 || index === 9 || index === 15 || index === 18);\n            forcastHash[pointList[i].name] = forecastByHour;\n        } else {\n            forecastByHour = forcastHash[pointList[i].name];\n        }\n    }\n\n    console.log(forecastByHour);\n\n\n    /* const forecastByHour = forecast.filter((forecast, index) => index === 6 || index === 9 || index === 15 || index === 18);\n     console.log(forecastByHour);\n     const arrWithForcast = {selectedPointName : [forecastByHour]}\n     console.log(arrWithForcast);*/\n\n    return (\n        <Wrapper>\n            ALA\n        </Wrapper>\n    )\n\n}\n\nconst Wrapper = styled.div`\nborder: 2px solid orange;\n`\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,SAASC,WAAW,QAAQ,uBAAuB;AAAC;AAEpD,eAAe,SAASC,QAAQ,OAAqC;EAAA;EAAA,IAApC;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAU,CAAC;EAE/D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAIU,cAAc;EAClB,IAAIC,WAAW,GAAG,CAAC,CAAC;EACpBC,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;EAEtB,KAAI,IAAIO,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAEP,SAAS,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAC;IAClCF,OAAO,CAACC,GAAG,CAACN,SAAS,CAACO,CAAC,CAAC,CAACE,IAAI,CAAC;IAC9B,IAAGT,SAAS,CAACO,CAAC,CAAC,CAACE,IAAI,KAAKL,WAAW,CAACJ,SAAS,CAACO,CAAC,CAAC,CAACE,IAAI,CAAC,EAAC;MACpDjB,SAAS,CAAC,MAAM;QACZ,MAAMkB,IAAI,GAAG;UACTX,SAAS,EAAEA,SAAS;UACpBD,QAAQ,EAAEA;QACd,CAAC;QACDF,WAAW,CAACc,IAAI,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;UACjCV,WAAW,CAACU,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;QACpC,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;UAChBX,OAAO,CAACC,GAAG,CAACU,KAAK,CAAC;QACtB,CAAC,CAAC;MACP,CAAC,EAAE,EAAE,CAAC;MACLb,cAAc,GAAGF,QAAQ,CAACgB,MAAM,CAAC,CAAChB,QAAQ,EAAEiB,KAAK,KAAKA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,EAAE,CAAC;MACjHd,WAAW,CAACJ,SAAS,CAACO,CAAC,CAAC,CAACE,IAAI,CAAC,GAAGN,cAAc;IACnD,CAAC,MAAM;MACHA,cAAc,GAAGC,WAAW,CAACJ,SAAS,CAACO,CAAC,CAAC,CAACE,IAAI,CAAC;IACnD;EACJ;EAEAJ,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;;EAG3B;AACJ;AACA;AACA;;EAEI,oBACI,QAAC,OAAO;IAAA,UAAC;EAET;IAAA;IAAA;IAAA;EAAA,QAAU;AAGlB;AAAC,GA1CuBN,QAAQ;AAAA,KAARA,QAAQ;AA4ChC,MAAMsB,OAAO,GAAGzB,MAAM,CAAC0B,GAAI;AAC3B;AACA,CAAC;AAAA,MAFKD,OAAO;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}