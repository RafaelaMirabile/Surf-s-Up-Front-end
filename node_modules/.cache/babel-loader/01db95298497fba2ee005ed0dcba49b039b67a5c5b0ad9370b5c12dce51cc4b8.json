{"ast":null,"code":"var _jsxFileName = \"/home/rafus/Documents/Surfs-Up-Front-end/src/pagesComponents/homePageComponents/Forecast.js\";\nimport { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport WaveHeightDirection from \"../forcastComponents/WaveHeight&Direction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(_ref) {\n  let {\n    selectedPointName,\n    forcastList\n  } = _ref;\n  const a = [{\n    waveHeight: 'waveHeight',\n    airTemperature: 'airTemperature',\n    currentDirection: 'currentDirection',\n    windDirection: 'windDirection',\n    swellPeriod: 'swellPeriod',\n    windSpeed: 'windSpeed'\n  }, {\n    waveHeight: 'waveHeight',\n    airTemperature: 'airTemperature',\n    currentDirection: 'currentDirection',\n    windDirection: 'windDirection',\n    swellPeriod: 'swellPeriod',\n    windSpeed: 'windSpeed'\n  }, {\n    waveHeight: 'waveHeight',\n    airTemperature: 'airTemperature',\n    currentDirection: 'currentDirection',\n    windDirection: 'windDirection',\n    swellPeriod: 'swellPeriod',\n    windSpeed: 'windSpeed'\n  }, {\n    waveHeight: 'waveHeight',\n    airTemperature: 'airTemperature',\n    currentDirection: 'currentDirection',\n    windDirection: 'windDirection',\n    swellPeriod: 'swellPeriod',\n    windSpeed: 'windSpeed'\n  }];\n  const waveHeight = a.map(value => value.waveHeight);\n  console.log(waveHeight);\n  const airTemperature = a.filter(value => value.airTemperature);\n  const currentDirection = a.filter(value => value.currentDirection);\n  const windDirection = a.filter(value => value.windDirection);\n  const swellPeriod = a.filter(value => value.swellPeriod);\n  const windSpeed = a.filter(value => value.windSpeed);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(WaveHeightDirection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_c = Forecast;\nconst Wrapper = styled.div`\nborder: 2px solid orange;\nwidth: 100%;\nheight: 50%;\n`;\n_c2 = Wrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"Forecast\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"names":["useContext","useEffect","useState","styled","WaveHeightDirection","Forecast","selectedPointName","forcastList","a","waveHeight","airTemperature","currentDirection","windDirection","swellPeriod","windSpeed","map","value","console","log","filter","Wrapper","div"],"sources":["/home/rafus/Documents/Surfs-Up-Front-end/src/pagesComponents/homePageComponents/Forecast.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\"\nimport styled from \"styled-components\";\nimport WaveHeightDirection from \"../forcastComponents/WaveHeight&Direction\";\n\nexport default function Forecast({ selectedPointName, forcastList }) {\n\n    const a = [{\n        waveHeight: 'waveHeight',\n        airTemperature: 'airTemperature',\n        currentDirection: 'currentDirection',\n        windDirection: 'windDirection',\n        swellPeriod: 'swellPeriod',\n        windSpeed: 'windSpeed'\n    }, {\n        waveHeight: 'waveHeight',\n        airTemperature: 'airTemperature',\n        currentDirection: 'currentDirection',\n        windDirection: 'windDirection',\n        swellPeriod: 'swellPeriod',\n        windSpeed: 'windSpeed'\n    }, {\n        waveHeight: 'waveHeight',\n        airTemperature: 'airTemperature',\n        currentDirection: 'currentDirection',\n        windDirection: 'windDirection',\n        swellPeriod: 'swellPeriod',\n        windSpeed: 'windSpeed'\n    }, {\n        waveHeight: 'waveHeight',\n        airTemperature: 'airTemperature',\n        currentDirection: 'currentDirection',\n        windDirection: 'windDirection',\n        swellPeriod: 'swellPeriod',\n        windSpeed: 'windSpeed'\n    }]\n\n    const waveHeight = a.map(value => value.waveHeight);\n    console.log(waveHeight)\n    const airTemperature = a.filter(value => value.airTemperature);\n    const currentDirection = a.filter(value => value.currentDirection);\n    const windDirection = a.filter(value => value.windDirection);\n    const swellPeriod = a.filter(value => value.swellPeriod);\n    const windSpeed = a.filter(value => value.windSpeed);\n\n    return (\n        <Wrapper>\n            <WaveHeightDirection\n            />\n        </Wrapper>\n    )\n\n}\n\nconst Wrapper = styled.div`\nborder: 2px solid orange;\nwidth: 100%;\nheight: 50%;\n`\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,mBAAmB,MAAM,2CAA2C;AAAC;AAE5E,eAAe,SAASC,QAAQ,OAAqC;EAAA,IAApC;IAAEC,iBAAiB;IAAEC;EAAY,CAAC;EAE/D,MAAMC,CAAC,GAAG,CAAC;IACPC,UAAU,EAAE,YAAY;IACxBC,cAAc,EAAE,gBAAgB;IAChCC,gBAAgB,EAAE,kBAAkB;IACpCC,aAAa,EAAE,eAAe;IAC9BC,WAAW,EAAE,aAAa;IAC1BC,SAAS,EAAE;EACf,CAAC,EAAE;IACCL,UAAU,EAAE,YAAY;IACxBC,cAAc,EAAE,gBAAgB;IAChCC,gBAAgB,EAAE,kBAAkB;IACpCC,aAAa,EAAE,eAAe;IAC9BC,WAAW,EAAE,aAAa;IAC1BC,SAAS,EAAE;EACf,CAAC,EAAE;IACCL,UAAU,EAAE,YAAY;IACxBC,cAAc,EAAE,gBAAgB;IAChCC,gBAAgB,EAAE,kBAAkB;IACpCC,aAAa,EAAE,eAAe;IAC9BC,WAAW,EAAE,aAAa;IAC1BC,SAAS,EAAE;EACf,CAAC,EAAE;IACCL,UAAU,EAAE,YAAY;IACxBC,cAAc,EAAE,gBAAgB;IAChCC,gBAAgB,EAAE,kBAAkB;IACpCC,aAAa,EAAE,eAAe;IAC9BC,WAAW,EAAE,aAAa;IAC1BC,SAAS,EAAE;EACf,CAAC,CAAC;EAEF,MAAML,UAAU,GAAGD,CAAC,CAACO,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACP,UAAU,CAAC;EACnDQ,OAAO,CAACC,GAAG,CAACT,UAAU,CAAC;EACvB,MAAMC,cAAc,GAAGF,CAAC,CAACW,MAAM,CAACH,KAAK,IAAIA,KAAK,CAACN,cAAc,CAAC;EAC9D,MAAMC,gBAAgB,GAAGH,CAAC,CAACW,MAAM,CAACH,KAAK,IAAIA,KAAK,CAACL,gBAAgB,CAAC;EAClE,MAAMC,aAAa,GAAGJ,CAAC,CAACW,MAAM,CAACH,KAAK,IAAIA,KAAK,CAACJ,aAAa,CAAC;EAC5D,MAAMC,WAAW,GAAGL,CAAC,CAACW,MAAM,CAACH,KAAK,IAAIA,KAAK,CAACH,WAAW,CAAC;EACxD,MAAMC,SAAS,GAAGN,CAAC,CAACW,MAAM,CAACH,KAAK,IAAIA,KAAK,CAACF,SAAS,CAAC;EAEpD,oBACI,QAAC,OAAO;IAAA,uBACJ,QAAC,mBAAmB;MAAA;MAAA;MAAA;IAAA;EAClB;IAAA;IAAA;IAAA;EAAA,QACI;AAGlB;AAAC,KA/CuBT,QAAQ;AAiDhC,MAAMe,OAAO,GAAGjB,MAAM,CAACkB,GAAI;AAC3B;AACA;AACA;AACA,CAAC;AAAA,MAJKD,OAAO;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}