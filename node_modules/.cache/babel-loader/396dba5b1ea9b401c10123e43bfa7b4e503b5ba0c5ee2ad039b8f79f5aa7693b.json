{"ast":null,"code":"var _jsxFileName = \"/home/rafus/Documents/Surfs-Up-Front-end/src/pagesComponents/homePageComponents/PointsList.js\",\n  _s = $RefreshSig$();\nimport Forecast from \"../pagesComponents/homePageComponents/Forecast.js\";\nimport Points from \"../pagesComponents/homePageComponents/Points.js\";\nimport Reports from \"../pagesComponents/homePageComponents/Reports.js\";\nimport { getPoints } from \"../services/API.js\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PointsList() {\n  _s();\n  const [pointList, setPointsList] = useState([]);\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [selectedPointName, setSelectedPointName] = useState('');\n  const [selectedPointId, setSelectedPointId] = useState(0);\n  const [forecastOrReport, setForecastOReport] = useState('forcast');\n  useEffect(() => {\n    getPoints().then(response => {\n      setPointsList(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: latitude.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [pointList.map((point, index) => /*#__PURE__*/_jsxDEV(Points, {\n        name: point.name,\n        id: point.id,\n        setLatitude: setLatitude,\n        setLongitude: setLongitude,\n        latitude: point.latitude,\n        longitude: point.longitude,\n        setSelectedPointName: setSelectedPointName,\n        setSelectedPointId: setSelectedPointId\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ForecastOrReport, {\n        children: [/*#__PURE__*/_jsxDEV(ForcastButton, {\n          forecastOrReport: forecastOrReport,\n          onClick: () => setForecastOReport('forcast'),\n          children: \"Forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ReportButton, {\n          forecastOrReport: forecastOrReport,\n          onClick: () => setForecastOReport('report'),\n          children: \"Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), forecastOrReport === 'forcast' ? /*#__PURE__*/_jsxDEV(Forecast, {\n        latitude: latitude,\n        longitude: longitude,\n        selectedPointName: selectedPointName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Reports, {\n        selectedPointName: selectedPointName,\n        selectedPointId: selectedPointId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(PointsList, \"+9Tf824D4EM8qeRObBGtQaVoRl4=\");\n_c = PointsList;\nvar _c;\n$RefreshReg$(_c, \"PointsList\");","map":{"version":3,"names":["Forecast","Points","Reports","getPoints","useEffect","useState","PointsList","pointList","setPointsList","latitude","setLatitude","longitude","setLongitude","selectedPointName","setSelectedPointName","selectedPointId","setSelectedPointId","forecastOrReport","setForecastOReport","then","response","data","catch","error","console","log","length","map","point","index","name","id"],"sources":["/home/rafus/Documents/Surfs-Up-Front-end/src/pagesComponents/homePageComponents/PointsList.js"],"sourcesContent":["import Forecast from \"../pagesComponents/homePageComponents/Forecast.js\";\nimport Points from \"../pagesComponents/homePageComponents/Points.js\"\nimport Reports from \"../pagesComponents/homePageComponents/Reports.js\";\nimport { getPoints } from \"../services/API.js\";\nimport { useEffect, useState } from \"react\"\n\nexport default function PointsList(){\n    const [pointList, setPointsList] = useState([]);\n    const [latitude, setLatitude] = useState('');\n    const [longitude, setLongitude] = useState('');\n    const [selectedPointName, setSelectedPointName] = useState('');\n    const [selectedPointId, setSelectedPointId] = useState(0);\n    const [forecastOrReport, setForecastOReport] = useState('forcast');\n\n    useEffect(() => {\n        getPoints().then((response) => {\n            setPointsList(response.data);\n        }).catch((error) => {\n            console.log(error);\n        });\n    }, []);\n    return (\n        <>\n          {latitude.length === 0 ? <>\n                {pointList.map((point, index) => (\n                    <Points\n                        key={index}\n                        name={point.name}\n                        id={point.id}\n                        setLatitude={setLatitude}\n                        setLongitude={setLongitude}\n                        latitude={point.latitude}\n                        longitude={point.longitude}\n                        setSelectedPointName={setSelectedPointName}\n                        setSelectedPointId={setSelectedPointId}\n                    />\n                ))} </> :\n                <>\n                    <ForecastOrReport>\n                        <ForcastButton forecastOrReport={forecastOrReport} onClick={() => setForecastOReport('forcast')}>Forcast</ForcastButton>\n                        <ReportButton forecastOrReport={forecastOrReport} onClick={() => setForecastOReport('report')}>Report</ReportButton>\n                    </ForecastOrReport>\n                    {forecastOrReport === 'forcast' ?\n                        <Forecast\n                            latitude={latitude}\n                            longitude={longitude}\n                            selectedPointName={selectedPointName}\n                        /> :\n                        <Reports\n                            selectedPointName={selectedPointName}\n                            selectedPointId={selectedPointId}\n                        />}\n                </>\n            }\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,mDAAmD;AACxE,OAAOC,MAAM,MAAM,iDAAiD;AACpE,OAAOC,OAAO,MAAM,kDAAkD;AACtE,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAE3C,eAAe,SAASC,UAAU,GAAE;EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACY,gBAAgB,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,SAAS,CAAC;EAElED,SAAS,CAAC,MAAM;IACZD,SAAS,EAAE,CAACgB,IAAI,CAAEC,QAAQ,IAAK;MAC3BZ,aAAa,CAACY,QAAQ,CAACC,IAAI,CAAC;IAChC,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACI;IAAA,UACGd,QAAQ,CAACiB,MAAM,KAAK,CAAC,gBAAG;MAAA,WAClBnB,SAAS,CAACoB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACxB,QAAC,MAAM;QAEH,IAAI,EAAED,KAAK,CAACE,IAAK;QACjB,EAAE,EAAEF,KAAK,CAACG,EAAG;QACb,WAAW,EAAErB,WAAY;QACzB,YAAY,EAAEE,YAAa;QAC3B,QAAQ,EAAEgB,KAAK,CAACnB,QAAS;QACzB,SAAS,EAAEmB,KAAK,CAACjB,SAAU;QAC3B,oBAAoB,EAAEG,oBAAqB;QAC3C,kBAAkB,EAAEE;MAAmB,GARlCa,KAAK;QAAA;QAAA;QAAA;MAAA,QAUjB,CAAC,EAAC,GAAC;IAAA,gBAAG,gBACP;MAAA,wBACI,QAAC,gBAAgB;QAAA,wBACb,QAAC,aAAa;UAAC,gBAAgB,EAAEZ,gBAAiB;UAAC,OAAO,EAAE,MAAMC,kBAAkB,CAAC,SAAS,CAAE;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAgB,eACxH,QAAC,YAAY;UAAC,gBAAgB,EAAED,gBAAiB;UAAC,OAAO,EAAE,MAAMC,kBAAkB,CAAC,QAAQ,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QACrG,EAClBD,gBAAgB,KAAK,SAAS,gBAC3B,QAAC,QAAQ;QACL,QAAQ,EAAER,QAAS;QACnB,SAAS,EAAEE,SAAU;QACrB,iBAAiB,EAAEE;MAAkB;QAAA;QAAA;QAAA;MAAA,QACvC,gBACF,QAAC,OAAO;QACJ,iBAAiB,EAAEA,iBAAkB;QACrC,eAAe,EAAEE;MAAgB;QAAA;QAAA;QAAA;MAAA,QACnC;IAAA;EACP,iBAER;AAEX;AAAC,GAlDuBT,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}